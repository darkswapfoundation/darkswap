version: '3.8'

services:
  # DarkSwap Relay Server
  relay:
    build:
      context: ./darkswap-relay
      dockerfile: Dockerfile
    image: darkswap/relay:latest
    container_name: darkswap-relay
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001/udp"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - RELAY_PORT=9000
      - STUN_PORT=9001
      - MAX_CONNECTIONS=1000
      - CONNECTION_TIMEOUT=60000
      - ENABLE_METRICS=true
      - METRICS_PORT=9100
    volumes:
      - relay-data:/app/data
    networks:
      - darkswap-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # DarkSwap Daemon
  daemon:
    build:
      context: .
      dockerfile: darkswap-daemon/Dockerfile
    image: darkswap/daemon:latest
    container_name: darkswap-daemon
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - API_PORT=3000
      - RELAY_SERVER=darkswap-relay:9000
      - BITCOIN_NETWORK=testnet
      - ENABLE_METRICS=true
      - METRICS_PORT=9101
    volumes:
      - daemon-data:/app/data
    networks:
      - darkswap-network
    depends_on:
      - relay
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # DarkSwap Web Interface
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - API_URL=http://localhost:3000
        - WS_URL=ws://localhost:3000/ws
    image: darkswap/web:latest
    container_name: darkswap-web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    volumes:
      - web-certs:/etc/nginx/certs
    networks:
      - darkswap-network
    depends_on:
      - daemon
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: darkswap-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - darkswap-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - relay
      - daemon

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: darkswap-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    networks:
      - darkswap-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=darkswap
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  relay-data:
  daemon-data:
  web-certs:
  prometheus-data:
  grafana-data:

networks:
  darkswap-network:
    driver: bridge