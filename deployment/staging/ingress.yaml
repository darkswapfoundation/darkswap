apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: darkswap-ingress
  namespace: darkswap-staging
  labels:
    app: darkswap
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
spec:
  tls:
  - hosts:
    - staging.darkswap.io
    - relay.staging.darkswap.io
    secretName: darkswap-staging-tls
  rules:
  - host: staging.darkswap.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: darkswap-web
            port:
              name: http
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: darkswap-daemon
            port:
              name: http
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: darkswap-daemon
            port:
              name: http
  - host: relay.staging.darkswap.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: darkswap-relay
            port:
              name: http