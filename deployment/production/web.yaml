apiVersion: v1
kind: ConfigMap
metadata:
  name: darkswap-web-config
  namespace: darkswap-production
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Enable gzip compression
        gzip on;
        gzip_comp_level 5;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_vary on;
        gzip_types
            application/javascript
            application/json
            application/x-javascript
            application/xml
            application/xml+rss
            text/css
            text/javascript
            text/plain
            text/xml;

        # Security headers
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' wss://*.darkswap.io;";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # Handle SPA routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # API proxy
        location /api/ {
            proxy_pass http://darkswap-daemon:3000/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # WebSocket proxy
        location /ws/ {
            proxy_pass http://darkswap-daemon:3000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
  env.js: |
    window.DARKSWAP_CONFIG = {
      apiUrl: '/api',
      wsUrl: '/ws',
      relayServers: ['wss://relay1.darkswap.io', 'wss://relay2.darkswap.io', 'wss://relay3.darkswap.io'],
      environment: 'production',
      version: '${VERSION}'
    };
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: darkswap-web
  namespace: darkswap-production
  labels:
    app: darkswap-web
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: darkswap-web
  template:
    metadata:
      labels:
        app: darkswap-web
        environment: production
    spec:
      containers:
      - name: darkswap-web
        image: darkswap/web:${VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: env-config
          mountPath: /usr/share/nginx/html/env.js
          subPath: env.js
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: darkswap-web-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: env-config
        configMap:
          name: darkswap-web-config
          items:
          - key: env.js
            path: env.js
---
apiVersion: v1
kind: Service
metadata:
  name: darkswap-web
  namespace: darkswap-production
  labels:
    app: darkswap-web
    environment: production
spec:
  selector:
    app: darkswap-web
  ports:
  - port: 80
    targetPort: 80
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: darkswap-web
  namespace: darkswap-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: darkswap-web
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: darkswap-web-pdb
  namespace: darkswap-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: darkswap-web