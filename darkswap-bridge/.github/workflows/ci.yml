name: DarkSwap Bridge CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Build and test the Rust components
  rust:
    name: Build and test Rust components
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
  
  # Build and test the web interface
  web:
    name: Build and test web interface
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
        working-directory: ./web
      
      - name: Lint
        run: npm run lint
        working-directory: ./web
      
      - name: Test
        run: npm test
        working-directory: ./web
      
      - name: Build
        run: npm run build
        working-directory: ./web
  
  # Build and test the backend server
  server:
    name: Build and test backend server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'server/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
        working-directory: ./server
      
      - name: Lint
        run: npm run lint
        working-directory: ./server
      
      - name: Test
        run: npm test
        working-directory: ./server
      
      - name: Build
        run: npm run build
        working-directory: ./server
  
  # Build Docker images
  docker:
    name: Build Docker images
    runs-on: ubuntu-latest
    needs: [rust, web, server]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push bridge image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: darkswap/bridge:latest
      
      - name: Build and push web image
        uses: docker/build-push-action@v4
        with:
          context: ./web
          push: true
          tags: darkswap/bridge-web:latest
      
      - name: Build and push server image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: darkswap/bridge-server:latest