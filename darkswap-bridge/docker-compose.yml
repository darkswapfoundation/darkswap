version: '3.8'

services:
  # Bridge service
  bridge:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: darkswap-bridge
    restart: unless-stopped
    volumes:
      - ./storage:/app/storage
    networks:
      - darkswap-network

  # Web interface service
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: darkswap-bridge-web
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - darkswap-network

  # Backend server service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: darkswap-bridge-server
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=your-secret-key
      - CLIENT_URL=http://localhost:3000
      - BRIDGE_PATH=/app/darkswap-bridge
    volumes:
      - ./storage:/app/storage
    depends_on:
      - bridge
    networks:
      - darkswap-network

  # Monitoring service (Prometheus)
  prometheus:
    image: prom/prometheus:latest
    container_name: darkswap-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - darkswap-network

  # Monitoring service (Grafana)
  grafana:
    image: grafana/grafana:latest
    container_name: darkswap-grafana
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - darkswap-network

networks:
  darkswap-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: